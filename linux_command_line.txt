#5
man $команда - мануал по команде
man $имя_файла_конфигурации - руководство по файла конфигурации
man $демон - для демона
man -k - выводит список страниц руководств, содержащих заданную строку #man -k syslog

whatis - описание страницы руководства # whatis route

whereis - расположение файла страницы руководства # whereis -m whois

mandb (makewhatis в дистрибутиве CentOS/Redhat)


#6
pwd - путь к вашей текущей директории

cd - смена директории
cd~ - переход в домашнюю директорию
cd.. - переход в родительскую директорию
cd- - переход в предыдущую директорию

ls - вывести список содержимого директории
ls -a - вывод информации обо всех файлах (в том числе скрытых)
ls -l - более подробный список файлов
ls -lh - выводить числовые значения (соответствующие размерам файлов) в формате, лучше читаемом человеком

mkdir - создать директорию
mkdir -p - при необходимости будут создаваться родительские директории

rmdir - удалить директорию
rmdir -p - рекурсивное удаление директорий


#7
file - определяет тип файла
file -s - используется для работы с такими специальными файлами, как файлы из директорий

touch - создание пустого файла
touch -t - позволяет устанавливать набор значений свойств пустых файлов в процессе их создания #touch -t 130207111630 BigBattle.txt

rm - удаление файла
rm -i - страховка от случайного удаления файла (задает вопрос перед удалением)
rm -rf - позволяет удалять все элементы файловой системы (в том числе каталоги)

cp - копирование файлов #cp file42 file42.copy
cp -r - копирование директорий целиком
cp -i - защита от случайного копирования

mv - используется для переименования файлов или для перемещения файлов в другие директории
mv -i

rename - переименование
rename в дистрибутиве Debian/Ubuntu #rename 's/\.txt/\.png/' *.txt
rename в дистрибутиве CentOS/RHEL/Fedora #rename .conf .backup *.conf


#8
head - вывод первых десяти строк файла
head -n - вывод первых n строк файла
head -cn - вывод первых n байт файла

tail - вывода последних десяти строк файла
tail -n - вывода последних n строк файла

cat - копирует данные из стандартного потока ввода в стандартный поток вывода #cat /etc/resolv.conf
cat file1 file2 - объединяет содержимое файлов file1 и file2 и выводит в стандартных поток вывода
cat > file1.txt
#какой-то текст' - создает file1.txt и записывает в него 'какой-то текст'
#cat > hot.txt <<stop
#> Сегодня жарко!
#> Да, это лето.
#> stop
cat winter.txt > cold.txt - копирует содержимое winter.txt в cold.txt

Программа < файл - брать stdin из файла
Программа > файл - выводить stdout в файл
Программа >> файл - аналогично, но с дозаписью в файл

echo 49 | ./program > result.txt - конвеер (число 49 передается в stdin в 
    программу progtam, stdout записывается в файл result.txt)

tac - выводит содержимое файла в обратном порядке

more - может оказаться полезной в случае возникновения необходимости вывода содержимого файлов, которое не умещается на экране

less - как more, но более функциональная
    q - выход; / - поиск;
    g - в начало; G - в конец; 

strings - осуществляет вывод читаемых человеком ascii-строк, которые обнаруживаются в бинарных файлах

wget ссылка - скачает файл по ссылке в тек. директорию
wget -P путь_до_файла ссылка - скачает в указанную директорию
wget -O путь_до_файла ссылка - можно указать имя скачиваемого файла
wget -c ссылка - докачать файл после прерывания
wget --spider ссылка - проверить доступность файла по ссылке
wget -i file.txt - скачает все файлы по указанным ссылкам в file.txt
wget -r -l глубина ссылка - рекурсивное скачивание файлов на указанную
    глубину (по умолчанию 5)
wget -r -A тип,тип,...,тип ссылка - рек. скачивание файлов указанных типов

unzip архив.zip - распаковать содержимое архива .zip
gunzip архив.gz - распаковать содержимое архива .gz, архив удалить
zip архив.zip файл1 файл2.. - запаковать файлы в архив
gzip файл - запаковать файл в архив файл.gz, файл удалить
tar -cvf архив.tar файл1, файл2 - запаковать файлы в архив .tar без сжатия
tar -zcvf архив.tar.gz файл1, файл2 - запаковать файлы в архив.tar.gz (со сжатием, при помощи gzip)
tar -xvf архив.tar - распаковать архив.tar
tar -xzvf архив.tar.gz - распаковать архив.tar.gz (с использованием gunzip)

find <папка> -name "<имя_файла>" - найти файл в папке
find ~/ -name "file.txt" - найти в домашней директории
find ~/ -name "*.txt" - найти все файлы .txt в дом. директории
find -iname <имя_файла> - не учитывать регистр
find -path <путь> - найти указанный путь
find -size <размер> - выводить файлы указанного размера
find -maxdepth <number> - поиск не больше чем на заданное число уровней вниз
find -mindepth <number> - искать начиная с заданного числа уровней вниз

grep "<строка>" <файл> - найти строку в файле
grep -c "<строка>" <файл> - посчитать количество вхождений строки
grep -r "<строка>" <папка> - найти строку во всех файлах в папке
grep -l "<строка>" <файл> - список файлов с этой строкой
grep -L "<строка>" <файл> - список файлов где этой строки нет
grep -n "<строка>" <файл> - номер строки в файле
grep -m <число> "<строка>" <файл> - не икать после заданного числа вхождений
grep -A <число> “<строка>”  <файл> - вывод это число строк после вхождения
grep -B <число> “<строка>”  <файл> - выводить это число строк до вхождения
grep -C <число> “<строка>”  <файл> - вывод это число строк вокруг вхождения
grep  -E  “<шаблон>”  <файл> - поиск по регулярному выражению

scp -P порт логин@адрес_сервера:путь1 путь2 - копирование файлов
    с сервера(путь1) на клиента(путь2)
scp -P порт путь1 логин@адрес_сервера:путь2 - копирование файлов
    с клиента(путь1) на сервер(путь2)Копии для всех баз данных создаются по расписанию.

jobs - посмотреть запущенные программы
fg <номер> - продолжить программу с этим номером
bg <номер> - продолжить программу с этим номером в фоне
ps - посмотреть процессы
top - отслеживать процессы в реальном времени
top -u <имя пользователя> - отслеживать процессы пользователя
kill <номер процесса> - завершить процесс
kill -9 <номер процесса> - убить процесс (зависший)

free -g - информация об оперативной памяти
nproc - количество ядер процессора
lscpu - детальная информация о процессоре
